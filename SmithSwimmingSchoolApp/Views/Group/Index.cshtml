@model IPagedList<SmithSwimmingSchoolApp.Models.Group>
@using X.PagedList
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Index";
}

<style>
    body {
        background: url('/images/FondoPiscina.webp') no-repeat center center fixed;
        background-size: cover;
        font-family: Arial, sans-serif;
    }
</style>

<div class="content-container">
    <h1 class="text-center my-2">Grupos</h1>

    <p class="text-center">
        <a asp-action="Create" class="btn btn-success btn-lg">Añadir Grupo</a>
    </p>
    
    <form method="get" class="mb-3">
        <div class="form-group">
            <label for="searchString">Buscar por Nombre:</label>
            <input type="text" name="searchString" value="@ViewBag.CurrentFilter" class="form-control" placeholder="Ingrese Ingrese el nombre del grupo" />
        </div>
        <button type="submit" class="btn btn-primary mt-2">Buscar</button>
    </form>

    @if (ViewBag.Message != null)
    {
        <div class="alert alert-info">
            @ViewBag.Message
        </div>
    }
    else{
        <table class="table table-striped table-bordered table-hover mt-2">
            <thead class="table-dark">
                <tr>
                    <th>
                        Nombre
                    </th>
                    <th>
                        Nivel
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewBag.StartDateSortParam" asp-route-searchString="@ViewBag.CurrentFilter">
                            Fecha de Inicio
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewBag.EndDateSortParam" asp-route-searchString="@ViewBag.CurrentFilter">
                            Fecha de Fin
                        </a>
                    </th>
                    <th class="text-center">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Level)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Start_Date)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.End_Date)
                        </td>
                        <td class="text-center">
                            <div class="action-buttons">
                                <a asp-action="Edit" asp-route-id="@item.GroupId" class="btn btn-warning btn-sm">Editar</a>
                                <a asp-action="Delete" asp-route-id="@item.GroupId" class="btn btn-danger btn-sm">Eliminar</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @* Paginador *@
        <div class="d-flex justify-content-center">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = ViewBag.CurrentFilter, sortOrder = ViewBag.CurrentSort }), new PagedListRenderOptions
            {
                DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                DisplayLinkToLastPage = PagedListDisplayMode.Always,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                MaximumPageNumbersToDisplay = 5,
                DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                EllipsesFormat = "…",
                LinkToFirstPageFormat = "Primera",
                LinkToLastPageFormat = "Última",
                LinkToPreviousPageFormat = "Anterior",
                LinkToNextPageFormat = "Siguiente",
                ContainerDivClasses = new[] { "pagination-container" },
                UlElementClasses = new[] { "pagination" },
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" }
            })
        </div>
    }
</div>
